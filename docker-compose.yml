version: "3"
services:

  # The IX Database
  db:
    image: postgres:${PG_VERSION}
    environment:
      POSTGRES_PASSWORD: ${PG_PASSWORD}
      POSTGRES_USER: ${PG_USER}
    restart: unless-stopped
    ports:
      - "${PG_HOST_PORT}:5432"
    volumes:
      - intrexx-db-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${PG_USER}"]
      interval: 5s
      timeout: 5s
      retries: 10

  # Manages the Solr nodes and is used to connect to them
  zookeeper:
    image: zookeeper:${ZOOKEEPER_VERSION}
    restart: unless-stopped
    ports:
      - ${ZOOKEEPER_PORT}:2181
      - ${ZOOKEEPER_METRICS_PORT}:7000
    environment:
      ZOO_4LW_COMMANDS_WHITELIST: mntr, conf, ruok

# Uploads the security.json to the zookeeper - there is actually no other way to do this
  solr-init:
    image: solr:${SOLR_VERSION}
    depends_on:
      zookeeper:
        condition: service_started
    environment:
      SOLR_OPTS: ${SOLR_OPTS}
      ZK_HOST: zookeeper:${ZOOKEEPER_PORT}
    ports:
     - "${SOLR_HOST_PORT}:8983"
    command: bash -c "bin/solr zk cp file:/var/solr/cfg/security.json zk:/security.json"
    volumes:
     - intrexx-solr-data:/var/solr
     # security.json is world-readable --> secure?
     # The hash needs to be computed using a tool like https://github.com/ansgarwiechers/solrpasswordhash
     - ./resource/zookeeper/security.json:/var/solr/cfg/security.json:ro

# A solr node in the "cluster"
  solr:
    image: solr:${SOLR_VERSION}
    depends_on:
      zookeeper:
        condition: service_started
      solr-init:
        condition: service_completed_successfully
    environment:
      SOLR_OPTS: ${SOLR_OPTS}
      ZK_HOST: zookeeper:${ZOOKEEPER_PORT}
    restart: unless-stopped
    ports:
     - "${SOLR_HOST_PORT}:8983"
    command: -c
    volumes:
     - intrexx-solr-data:/var/solr

# Creates or patches the portal
  intrexx-init:
    image: unitedplanet/${IX_REPO}:${IX_VERSION}
    command: "echo done"
    depends_on:
      db:
        condition: service_healthy
      solr:
        condition: service_started
      zookeeper:
        condition: service_started
    environment:
      DB_HOST: db
      SOLR_HOST: zookeeper
      SOLR_PORT: 2181
      SOLR_USER: ${SOLR_USER}
      SOLR_PASSWORD: ${SOLR_PASSWORD}
      SOLR_SASL_DISABLED: "true"
      PORTAL_NAME: ${IX_PORTAL_NAME}
      PORTAL_BASE_URL: ${IX_PORTAL_BASE_URL}
      PORTAL_ZIP_NAME: ${IX_PORTAL_ZIP_NAME:-portal-template.zip}
      PORTAL_ZIP_MNTPT: ${IX_PORTAL_ZIP_MNTPT:-/opt/intrexx/org}
      DB_NAME: ${IX_DB_NAME}
      DB_USER: ${PG_USER}
      DB_PASSWORD: ${PG_PASSWORD}
      IX_DISTRIBUTED: ${IX_DISTRIBUTED}
    volumes:
      - portal-data:/opt/intrexx/org
      - intrexx-cfg:/opt/intrexx/cfg
#      - ${IX_PORTAL_DIR_HOST}:/opt/intrexx/org
#      - ${IX_PORTAL_DIR_HOST}:${IX_PORTAL_ZIP_MNTPT}

  # The Intrexx instance(s) that run the portal
  intrexx:
    deploy:
      mode: ${IX_DEPLOY_MODE}
      replicas: ${IX_DEPLOY_REPLICATIONS}
    image: unitedplanet/${IX_REPO}:${IX_VERSION}
    depends_on:
      db:
        condition: service_healthy
      solr:
        condition: service_started
      zookeeper:
        condition: service_started
      intrexx-init:
        condition: service_completed_successfully
    environment:
      DB_HOST: db
      SOLR_HOST: zookeeper
      SOLR_PORT: 2181
      SOLR_USER: ${SOLR_USER}
      SOLR_PASSWORD: ${SOLR_PASSWORD}
      SOLR_SASL_DISABLED: "true"
      PORTAL_NAME: ${IX_PORTAL_NAME}
      PORTAL_BASE_URL: ${IX_PORTAL_BASE_URL}
      PORTAL_ZIP_NAME: ${IX_PORTAL_ZIP_NAME:-portal-template.zip}
      PORTAL_ZIP_MNTPT: ${IX_PORTAL_ZIP_MNTPT:-/opt/intrexx/org}
      DB_NAME: ${IX_DB_NAME}
      DB_USER: ${PG_USER}
      DB_PASSWORD: ${PG_PASSWORD}
      IX_DISTRIBUTED: ${IX_DISTRIBUTED}
      IX_DISTRIBUTED_NODELIST: ${IX_DISTRIBUTED_NODELIST}
    restart: unless-stopped
    ports:
      - "${IX_WEBCONNECTOR_HOST_PORT}:1337"
      - "${IX_REST_HOST_PORT}:8101"
      - "${IX_ODATA_HOST_PORT}:9090"
    volumes:
      - portal-data:/opt/intrexx/org
      - intrexx-cfg:/opt/intrexx/cfg
#      - ${IX_PORTAL_DIR_HOST}:/opt/intrexx/org
    healthcheck:
      test: ["CMD-SHELL", "curl -f localhost:1337/service/ping/"]
      interval: 5s
      timeout: 5s
      retries: 60


# # Loadbalancer for distributed
#  nginx:
#    image: nginx:${NGINX_VERSION}
#    volumes:
#      - ./resource/nginx/distributed/conf.d:/etc/nginx/conf.d:ro
#    depends_on:
#      - intrexx
#    ports:
#      - "1337:1337"

# # Reverse proxy for standalone
#  nginx:
#    depends_on:
#      - intrexx
#    image: nginx:${NGINX_VERSION}
#    restart: unless-stopped
#    ports:
#      - "80:80"
#      - "443:443"
#    volumes:
#      - ./resource/nginx/standalone/conf.d:/etc/nginx/conf.d:ro
#      - ./resource/nginx/ssl/example.unitedplanet.de:/etc/ssl/example.unitedplanet.de:ro


volumes:
  portal-data:
  intrexx-db-data:
  intrexx-solr-data:
  intrexx-cfg:
